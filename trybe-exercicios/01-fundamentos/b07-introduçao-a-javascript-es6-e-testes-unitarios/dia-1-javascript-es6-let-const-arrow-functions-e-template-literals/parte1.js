/** 1. Fa√ßa as modifica√ß√µes necess√°rias na fun√ß√£o para que o seu comportamento respeite o escopo no qual cada vari√°vel foi declarada.
- Modifique a estrutura da fun√ß√£o para que ela seja uma arrow function .
- Modifique as concatena√ß√µes para template literals . 

function testingScope(escopo) {
  if (escopo === true) {
    var ifScope = 'N√£o devo ser utilizada fora do meu escopo (if)';
    ifScope = ifScope + ' √≥timo, fui utilizada no escopo !';
    console.log(ifScope);
  } else {
    var elseScope = 'N√£o devo ser utilizada fora meu escopo (else)';
    console.log(elseScope);
  }
  console.log(ifScope + ' o que estou fazendo aqui ? :O'); // Se necess√°rio esta linha pode ser removida.
}

testingScope(true); */

let testingScope = (escopo) => {
  if (escopo === true) {
    let ifScope = 'N√£o devo ser utilizada fora do meu escopo (if)';
    ifScope = `${ifScope} √≥timo, fui utilizada no escopo !`;
    console.log(ifScope);
  } else {
    const elseScope = 'N√£o devo ser utilizada fora meu escopo (else)';
    console.log(elseScope);
  }
}

testingScope(true);

/** 2. Copie o c√≥digo abaixo e fa√ßa uma fun√ß√£o que retorne o array oddsAndEvens em ordem crescente.
- Utilize template literals para que a chamada console.log(<seu c√≥digo>oddsAndEvens<seu c√≥digo>); retorne "Os n√∫meros 2,3,4,7,10,13 se encontram ordenados de forma crescente!".
- B√¥nus (opcional): tente fazer o mesmo exerc√≠cio utilizando o m√©todo array.sort() . Spoiler: √â poss√≠vel realizar uma fun√ß√£o que ordene qualquer array de n√∫meros. 

const oddsAndEvens = [13, 3, 4, 10, 7, 2];

// Seu c√≥digo aqui.

console.log(oddsAndEvens); // ser√° necess√°rio alterar essa linha üòâ */

const oddsAndEvens = [13, 3, 4, 10, 7, 2];

const arrayAscendingOrder = (array) => {
  for (let index = 1; index  <= array.length; index += 1) {
    for (let i = 1; i  <= array.length; i += 1) {
      const number = array[i];
      const previousNumber = array[i -1];
      if (number < previousNumber) {
        array[i - 1] = number;
        array[i] = previousNumber;
      }
    }
  }
  return array;
}

console.log(`Os n√∫meros ${arrayAscendingOrder(oddsAndEvens)} se encontram ordenados de forma crescente!`);

const arraySort = (array) => {
  array.sort((a, b) => {
    return a - b;
  });
  return array;
}

console.log(`Os n√∫meros ${arraySort(oddsAndEvens)} se encontram ordenados de forma crescente!`);